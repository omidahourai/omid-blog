# source: https://graphql.contentful.com/content/v1/spaces/5u1gaocjmw5v
# timestamp: Wed Apr 24 2019 14:32:49 GMT-0700 (Pacific Daylight Time)

"""
blog post article [See type definition](https://app.contentful.com/spaces/5u1gaocjmw5v/content_types/article)
"""
type Article implements Entry {
  sys: Sys!
  linkedFrom: ArticleLinkingCollections
  title: String
  author(preview: Boolean, locale: String): Author
  summary: String
  content: String
  hero(preview: Boolean, locale: String): Asset
  imagesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): AssetCollection
  slug: String
  category(preview: Boolean, locale: String): Category
  tagsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleTagsCollection
  updatedOn: DateTime
  publishedOn: DateTime
  variablesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleVariablesCollection
}

type ArticleCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Article]!
}

input ArticleFilter {
  sys: SysFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  summary_exists: Boolean
  summary: String
  summary_not: String
  summary_in: [String]
  summary_not_in: [String]
  summary_contains: String
  summary_not_contains: String
  content_exists: Boolean
  content: String
  content_not: String
  content_in: [String]
  content_not_in: [String]
  content_contains: String
  content_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  updatedOn_exists: Boolean
  updatedOn: DateTime
  updatedOn_not: DateTime
  updatedOn_in: [DateTime]
  updatedOn_not_in: [DateTime]
  updatedOn_gt: DateTime
  updatedOn_gte: DateTime
  updatedOn_lt: DateTime
  updatedOn_lte: DateTime
  publishedOn_exists: Boolean
  publishedOn: DateTime
  publishedOn_not: DateTime
  publishedOn_in: [DateTime]
  publishedOn_not_in: [DateTime]
  publishedOn_gt: DateTime
  publishedOn_gte: DateTime
  publishedOn_lt: DateTime
  publishedOn_lte: DateTime
  OR: [ArticleFilter]
  AND: [ArticleFilter]
}

type ArticleLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
}

enum ArticleOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  updatedOn_ASC
  updatedOn_DESC
  publishedOn_ASC
  publishedOn_DESC
  sys_id_ASC
  sys_id_DESC
}

type ArticleTagsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Tag]!
}

type ArticleVariablesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Variable]!
}

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  sys: Sys!
  title: String
  description: String
  contentType: String
  fileName: String
  size: Int
  url(transform: ImageTransformOptions): String
  width: Int
  height: Int
  linkedFrom: AssetLinkingCollections
}

type AssetCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Asset]!
}

input AssetFilter {
  sys: SysFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  url_exists: Boolean
  url: String
  url_not: String
  url_in: [String]
  url_not_in: [String]
  url_contains: String
  url_not_contains: String
  size_exists: Boolean
  size: Int
  size_not: Int
  size_in: [Int]
  size_not_in: [Int]
  size_gt: Int
  size_gte: Int
  size_lt: Int
  size_lte: Int
  contentType_exists: Boolean
  contentType: String
  contentType_not: String
  contentType_in: [String]
  contentType_not_in: [String]
  contentType_contains: String
  contentType_not_contains: String
  fileName_exists: Boolean
  fileName: String
  fileName_not: String
  fileName_in: [String]
  fileName_not_in: [String]
  fileName_contains: String
  fileName_not_contains: String
  width_exists: Boolean
  width: Int
  width_not: Int
  width_in: [Int]
  width_not_in: [Int]
  width_gt: Int
  width_gte: Int
  width_lt: Int
  width_lte: Int
  height_exists: Boolean
  height: Int
  height_not: Int
  height_in: [Int]
  height_not_in: [Int]
  height_gt: Int
  height_gte: Int
  height_lt: Int
  height_lte: Int
  OR: [AssetFilter]
  AND: [AssetFilter]
}

type AssetLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleCollection
  authorCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): AuthorCollection
}

enum AssetOrder {
  url_ASC
  url_DESC
  size_ASC
  size_DESC
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  width_ASC
  width_DESC
  height_ASC
  height_DESC
  sys_id_ASC
  sys_id_DESC
}

"""
Writer of articles [See type definition](https://app.contentful.com/spaces/5u1gaocjmw5v/content_types/author)
"""
type Author implements Entry {
  sys: Sys!
  linkedFrom: AuthorLinkingCollections
  firstName: String
  lastName: String
  photo(preview: Boolean, locale: String): Asset
  altPhoto(preview: Boolean, locale: String): Asset
  shortTitle: String
  shortDescription: String
  description: String
  emailAddress: String
  facebookHandle: String
  twitterHandle: String
  instagramHandle: String
  linkedinHandle: String
}

type AuthorCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Author]!
}

input AuthorFilter {
  sys: SysFilter
  firstName_exists: Boolean
  firstName: String
  firstName_not: String
  firstName_in: [String]
  firstName_not_in: [String]
  firstName_contains: String
  firstName_not_contains: String
  lastName_exists: Boolean
  lastName: String
  lastName_not: String
  lastName_in: [String]
  lastName_not_in: [String]
  lastName_contains: String
  lastName_not_contains: String
  shortTitle_exists: Boolean
  shortTitle: String
  shortTitle_not: String
  shortTitle_in: [String]
  shortTitle_not_in: [String]
  shortTitle_contains: String
  shortTitle_not_contains: String
  shortDescription_exists: Boolean
  shortDescription: String
  shortDescription_not: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  shortDescription_contains: String
  shortDescription_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  emailAddress_exists: Boolean
  emailAddress: String
  emailAddress_not: String
  emailAddress_in: [String]
  emailAddress_not_in: [String]
  emailAddress_contains: String
  emailAddress_not_contains: String
  facebookHandle_exists: Boolean
  facebookHandle: String
  facebookHandle_not: String
  facebookHandle_in: [String]
  facebookHandle_not_in: [String]
  facebookHandle_contains: String
  facebookHandle_not_contains: String
  twitterHandle_exists: Boolean
  twitterHandle: String
  twitterHandle_not: String
  twitterHandle_in: [String]
  twitterHandle_not_in: [String]
  twitterHandle_contains: String
  twitterHandle_not_contains: String
  instagramHandle_exists: Boolean
  instagramHandle: String
  instagramHandle_not: String
  instagramHandle_in: [String]
  instagramHandle_not_in: [String]
  instagramHandle_contains: String
  instagramHandle_not_contains: String
  linkedinHandle_exists: Boolean
  linkedinHandle: String
  linkedinHandle_not: String
  linkedinHandle_in: [String]
  linkedinHandle_not_in: [String]
  linkedinHandle_contains: String
  linkedinHandle_not_contains: String
  OR: [AuthorFilter]
  AND: [AuthorFilter]
}

type AuthorLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleCollection
}

enum AuthorOrder {
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  shortTitle_ASC
  shortTitle_DESC
  shortDescription_ASC
  shortDescription_DESC
  emailAddress_ASC
  emailAddress_DESC
  facebookHandle_ASC
  facebookHandle_DESC
  twitterHandle_ASC
  twitterHandle_DESC
  instagramHandle_ASC
  instagramHandle_DESC
  linkedinHandle_ASC
  linkedinHandle_DESC
  sys_id_ASC
  sys_id_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/5u1gaocjmw5v/content_types/category)
"""
type Category implements Entry {
  sys: Sys!
  linkedFrom: CategoryLinkingCollections
  name: String
}

type CategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Category]!
}

input CategoryFilter {
  sys: SysFilter
  name_exists: Boolean
  name: String
  name_not: String
  name_in: [String]
  name_not_in: [String]
  name_contains: String
  name_not_contains: String
  OR: [CategoryFilter]
  AND: [CategoryFilter]
}

type CategoryLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleCollection
}

enum CategoryOrder {
  name_ASC
  name_DESC
  sys_id_ASC
  sys_id_DESC
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  sys: Sys!
}

type EntryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Entry]!
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top right."""
  TOP_RIGHT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES
}

enum ImageResizeStrategy {
  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, preview: Boolean, locale: String): Asset
  assetCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: AssetFilter, order: [AssetOrder]): AssetCollection
  variable(id: String!, preview: Boolean, locale: String): Variable
  variableCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: VariableFilter, order: [VariableOrder]): VariableCollection
  article(id: String!, preview: Boolean, locale: String): Article
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: ArticleFilter, order: [ArticleOrder]): ArticleCollection
  author(id: String!, preview: Boolean, locale: String): Author
  authorCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: AuthorFilter, order: [AuthorOrder]): AuthorCollection
  category(id: String!, preview: Boolean, locale: String): Category
  categoryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: CategoryFilter, order: [CategoryOrder]): CategoryCollection
  tag(id: String!, preview: Boolean, locale: String): Tag
  tagCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: TagFilter, order: [TagOrder]): TagCollection
}

type Sys {
  id: String!
  spaceId: String!
  environmentId: String!
}

input SysFilter {
  id_exists: Boolean
  id: String
  id_not: String
  id_in: [String]
  id_not_in: [String]
  id_contains: String
  id_not_contains: String
}

"""
[See type definition](https://app.contentful.com/spaces/5u1gaocjmw5v/content_types/tag)
"""
type Tag implements Entry {
  sys: Sys!
  linkedFrom: TagLinkingCollections
  name: String
}

type TagCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Tag]!
}

input TagFilter {
  sys: SysFilter
  name_exists: Boolean
  name: String
  name_not: String
  name_in: [String]
  name_not_in: [String]
  name_contains: String
  name_not_contains: String
  OR: [TagFilter]
  AND: [TagFilter]
}

type TagLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleCollection
}

enum TagOrder {
  name_ASC
  name_DESC
  sys_id_ASC
  sys_id_DESC
}

"""
Has a key and value [See type definition](https://app.contentful.com/spaces/5u1gaocjmw5v/content_types/variable)
"""
type Variable implements Entry {
  sys: Sys!
  linkedFrom: VariableLinkingCollections
  name: String
  key: String
  value: String
}

type VariableCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Variable]!
}

input VariableFilter {
  sys: SysFilter
  name_exists: Boolean
  name: String
  name_not: String
  name_in: [String]
  name_not_in: [String]
  name_contains: String
  name_not_contains: String
  key_exists: Boolean
  key: String
  key_not: String
  key_in: [String]
  key_not_in: [String]
  key_contains: String
  key_not_contains: String
  value_exists: Boolean
  value: String
  value_not: String
  value_in: [String]
  value_not_in: [String]
  value_contains: String
  value_not_contains: String
  OR: [VariableFilter]
  AND: [VariableFilter]
}

type VariableLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  articleCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): ArticleCollection
}

enum VariableOrder {
  name_ASC
  name_DESC
  key_ASC
  key_DESC
  value_ASC
  value_DESC
  sys_id_ASC
  sys_id_DESC
}
